
import 'dart:convert';
import 'dart:io';
import 'dart:math';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter_quill/translations.dart';
import 'package:get/get.dart';
import 'package:google_mobile_ads/google_mobile_ads.dart';
import 'package:now_korea/utile/gradientText.dart';
import 'package:now_korea/view/ar/arPage.dart';
import 'package:now_korea/view/ar/test.dart';
// import 'package:now_korea/view/ar/test.dart';
import 'package:now_korea/view/community/communityPage.dart';
import 'package:now_korea/view/info/infoPage.dart';
import 'package:now_korea/view/mainHome/mainHome.dart';
import 'package:now_korea/view/map/vectorMap.dart';
import 'package:vector_map/vector_map.dart';
import 'admob/mainBanner.dart';
import 'component/languages.dart';
import 'firebase_options.dart';
import 'package:http/http.dart' as http;
import 'global.dart';
import 'itemPage.dart';
import 'mapPage.dart';
import 'package:lottie/lottie.dart'as lottie;
import 'package:flutter_localizations/flutter_localizations.dart';

String koreaGeoJson = '''
{"type":"FeatureCollection", "features": [
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[126.984,37.636],[126.948,37.657],[126.912,37.644],[126.897,37.589],[126.854,37.574],[126.801,37.59],[126.772,37.548],[126.821,37.541],[126.819,37.479],[126.872,37.485],[126.903,37.434],[126.959,37.439],[127.003,37.467],[127.071,37.432],[127.127,37.469],[127.131,37.468],[127.132,37.468],[127.132,37.469],[127.132,37.47],[127.133,37.471],[127.133,37.472],[127.133,37.474],[127.133,37.475],[127.134,37.475],[127.135,37.474],[127.136,37.474],[127.144,37.474],[127.144,37.475],[127.144,37.476],[127.147,37.477],[127.148,37.482],[127.156,37.488],[127.155,37.488],[127.156,37.489],[127.158,37.489],[127.159,37.49],[127.157,37.49],[127.142,37.516],[127.176,37.575],[127.129,37.566],[127.096,37.689],[127.015,37.701],[126.98,37.656],[126.984,37.636]]]},"properties":{"CTPRVN_CD":"11","CTP_ENG_NM":"Seoul","CTP_KOR_NM":"서울특별시"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[129.288,35.321],[129.263,35.386],[129.219,35.379],[129.178,35.352],[129.149,35.364],[129.112,35.31],[129.045,35.275],[129.017,35.275],[128.999,35.238],[128.886,35.214],[128.881,35.183],[128.843,35.158],[128.838,35.083],[128.895,35.079],[128.933,35.095],[128.958,35.051],[129.022,35.062],[129.025,35.094],[129.067,35.108],[129.113,35.103],[129.12,35.154],[129.181,35.155],[129.224,35.186],[129.222,35.213],[129.253,35.247],[129.268,35.322],[129.288,35.321]]]},"properties":{"CTPRVN_CD":"26","CTP_ENG_NM":"Busan","CTP_KOR_NM":"부산광역시"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[128.473,35.833],[128.47,35.806],[128.421,35.809],[128.383,35.759],[128.432,35.726],[128.412,35.696],[128.357,35.682],[128.4,35.646],[128.506,35.64],[128.528,35.713],[128.581,35.739],[128.624,35.703],[128.683,35.721],[128.695,35.756],[128.683,35.79],[128.709,35.827],[128.76,35.866],[128.738,35.928],[128.746,35.973],[128.696,36.016],[128.617,36.007],[128.546,35.966],[128.529,35.924],[128.475,35.894],[128.476,35.934],[128.431,35.931],[128.398,35.893],[128.384,35.853],[128.436,35.848],[128.473,35.834],[128.473,35.833]]]},"properties":{"CTPRVN_CD":"27","CTP_ENG_NM":"Daegu","CTP_KOR_NM":"대구광역시"}},
{"type":"Feature","geometry":{"type":"MultiPolygon","coordinates":[[[[126.343,37.644],[126.375,37.669],[126.363,37.696],[126.316,37.685],[126.343,37.644]]],[[[126.601,37.416],[126.61,37.387],[126.663,37.351],[126.721,37.383],[126.769,37.428],[126.777,37.472],[126.745,37.514],[126.787,37.586],[126.726,37.592],[126.672,37.634],[126.626,37.603],[126.64,37.585],[126.597,37.549],[126.608,37.487],[126.601,37.416]]],[[[126.541,37.521],[126.512,37.534],[126.471,37.498],[126.417,37.496],[126.356,37.468],[126.38,37.44],[126.443,37.422],[126.508,37.466],[126.583,37.491],[126.541,37.521]]],[[[126.439,37.231],[126.496,37.256],[126.471,37.285],[126.435,37.273],[126.439,37.231]]],[[[126.265,37.818],[126.223,37.805],[126.216,37.778],[126.291,37.763],[126.298,37.802],[126.265,37.818]]],[[[126.431,37.83],[126.351,37.79],[126.356,37.707],[126.392,37.694],[126.413,37.656],[126.377,37.636],[126.403,37.594],[126.511,37.597],[126.543,37.618],[126.523,37.652],[126.514,37.725],[126.526,37.747],[126.507,37.782],[126.431,37.83]]],[[[124.687,37.98],[124.623,37.957],[124.637,37.924],[124.696,37.917],[124.73,37.978],[124.687,37.98]]]]},"properties":{"CTPRVN_CD":"28","CTP_ENG_NM":"Incheon","CTP_KOR_NM":"인천광역시"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[126.76,35.259],[126.736,35.251],[126.657,35.167],[126.652,35.12],[126.736,35.108],[126.776,35.053],[126.804,35.052],[126.921,35.092],[126.936,35.074],[126.989,35.095],[127.012,35.128],[127,35.189],[126.972,35.185],[126.931,35.251],[126.905,35.258],[126.806,35.219],[126.754,35.237],[126.76,35.259]]]},"properties":{"CTPRVN_CD":"29","CTP_ENG_NM":"Gwangju","CTP_KOR_NM":"광주광역시"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[127.402,36.486],[127.398,36.49],[127.397,36.491],[127.396,36.492],[127.358,36.483],[127.356,36.45],[127.326,36.422],[127.282,36.415],[127.279,36.345],[127.26,36.327],[127.259,36.276],[127.283,36.235],[127.324,36.203],[127.39,36.24],[127.449,36.197],[127.493,36.238],[127.493,36.239],[127.492,36.242],[127.493,36.243],[127.49,36.245],[127.489,36.246],[127.489,36.247],[127.488,36.25],[127.488,36.251],[127.488,36.252],[127.489,36.253],[127.49,36.254],[127.49,36.256],[127.49,36.258],[127.487,36.259],[127.486,36.259],[127.487,36.262],[127.488,36.265],[127.488,36.267],[127.489,36.267],[127.49,36.268],[127.49,36.269],[127.49,36.27],[127.489,36.27],[127.489,36.271],[127.489,36.272],[127.489,36.273],[127.49,36.273],[127.49,36.274],[127.491,36.274],[127.493,36.275],[127.493,36.276],[127.494,36.277],[127.495,36.278],[127.497,36.28],[127.499,36.283],[127.498,36.285],[127.498,36.286],[127.496,36.288],[127.495,36.29],[127.496,36.29],[127.495,36.291],[127.494,36.292],[127.494,36.293],[127.493,36.295],[127.492,36.296],[127.491,36.297],[127.491,36.298],[127.492,36.299],[127.492,36.3],[127.493,36.301],[127.495,36.301],[127.496,36.299],[127.497,36.301],[127.497,36.302],[127.499,36.305],[127.499,36.306],[127.499,36.307],[127.496,36.311],[127.495,36.312],[127.496,36.314],[127.497,36.314],[127.497,36.315],[127.498,36.316],[127.497,36.317],[127.497,36.318],[127.497,36.319],[127.499,36.321],[127.5,36.321],[127.5,36.322],[127.501,36.322],[127.501,36.323],[127.502,36.323],[127.502,36.324],[127.502,36.325],[127.503,36.325],[127.503,36.326],[127.502,36.328],[127.502,36.33],[127.502,36.331],[127.502,36.332],[127.501,36.333],[127.501,36.334],[127.501,36.335],[127.502,36.336],[127.501,36.337],[127.501,36.339],[127.501,36.34],[127.502,36.34],[127.504,36.341],[127.505,36.341],[127.504,36.342],[127.505,36.342],[127.507,36.343],[127.508,36.344],[127.508,36.345],[127.507,36.346],[127.51,36.347],[127.51,36.346],[127.512,36.346],[127.513,36.347],[127.517,36.348],[127.517,36.349],[127.517,36.35],[127.519,36.35],[127.52,36.351],[127.522,36.353],[127.522,36.354],[127.523,36.355],[127.523,36.356],[127.523,36.357],[127.522,36.358],[127.523,36.359],[127.524,36.36],[127.524,36.361],[127.524,36.362],[127.525,36.363],[127.525,36.364],[127.524,36.365],[127.524,36.366],[127.525,36.366],[127.526,36.368],[127.526,36.372],[127.525,36.376],[127.525,36.377],[127.526,36.379],[127.525,36.38],[127.525,36.382],[127.525,36.384],[127.525,36.386],[127.525,36.388],[127.526,36.387],[127.527,36.388],[127.528,36.389],[127.529,36.389],[127.529,36.39],[127.53,36.391],[127.531,36.391],[127.532,36.391],[127.533,36.392],[127.534,36.393],[127.533,36.393],[127.533,36.394],[127.535,36.394],[127.536,36.395],[127.537,36.395],[127.545,36.396],[127.55,36.397],[127.551,36.396],[127.551,36.395],[127.554,36.395],[127.557,36.397],[127.559,36.398],[127.56,36.398],[127.559,36.399],[127.559,36.4],[127.558,36.4],[127.557,36.4],[127.555,36.4],[127.554,36.401],[127.552,36.405],[127.551,36.406],[127.55,36.407],[127.548,36.408],[127.547,36.408],[127.546,36.409],[127.542,36.416],[127.542,36.419],[127.539,36.42],[127.538,36.42],[127.537,36.42],[127.535,36.419],[127.534,36.419],[127.533,36.419],[127.529,36.42],[127.528,36.421],[127.527,36.421],[127.526,36.421],[127.526,36.422],[127.524,36.423],[127.523,36.423],[127.521,36.421],[127.52,36.42],[127.519,36.42],[127.518,36.421],[127.517,36.421],[127.517,36.422],[127.516,36.422],[127.515,36.422],[127.514,36.419],[127.513,36.418],[127.513,36.416],[127.511,36.411],[127.511,36.41],[127.51,36.409],[127.509,36.409],[127.506,36.408],[127.502,36.409],[127.5,36.412],[127.5,36.413],[127.499,36.413],[127.498,36.415],[127.497,36.416],[127.497,36.419],[127.497,36.42],[127.496,36.421],[127.495,36.424],[127.494,36.425],[127.493,36.426],[127.493,36.427],[127.492,36.428],[127.492,36.429],[127.491,36.43],[127.49,36.432],[127.49,36.434],[127.491,36.436],[127.492,36.439],[127.493,36.44],[127.494,36.441],[127.496,36.444],[127.497,36.445],[127.499,36.446],[127.5,36.447],[127.501,36.447],[127.501,36.448],[127.502,36.449],[127.503,36.449],[127.504,36.45],[127.504,36.452],[127.503,36.455],[127.503,36.456],[127.501,36.456],[127.499,36.456],[127.498,36.455],[127.497,36.455],[127.496,36.455],[127.494,36.454],[127.493,36.454],[127.491,36.453],[127.485,36.453],[127.483,36.453],[127.482,36.454],[127.48,36.456],[127.478,36.457],[127.478,36.458],[127.477,36.459],[127.478,36.46],[127.478,36.461],[127.478,36.462],[127.479,36.463],[127.479,36.464],[127.48,36.465],[127.481,36.465],[127.481,36.466],[127.482,36.467],[127.482,36.468],[127.483,36.468],[127.483,36.469],[127.483,36.47],[127.484,36.471],[127.484,36.472],[127.484,36.474],[127.485,36.475],[127.484,36.476],[127.484,36.477],[127.481,36.477],[127.476,36.476],[127.474,36.476],[127.472,36.475],[127.47,36.474],[127.47,36.473],[127.466,36.47],[127.466,36.469],[127.466,36.468],[127.465,36.468],[127.465,36.467],[127.464,36.465],[127.464,36.464],[127.464,36.463],[127.464,36.46],[127.463,36.46],[127.463,36.456],[127.462,36.456],[127.462,36.455],[127.461,36.454],[127.459,36.452],[127.458,36.452],[127.457,36.452],[127.457,36.451],[127.456,36.451],[127.454,36.45],[127.453,36.45],[127.452,36.449],[127.45,36.449],[127.447,36.449],[127.446,36.45],[127.445,36.45],[127.444,36.45],[127.443,36.451],[127.442,36.451],[127.442,36.452],[127.441,36.452],[127.441,36.453],[127.44,36.453],[127.44,36.454],[127.439,36.454],[127.439,36.455],[127.438,36.455],[127.438,36.456],[127.434,36.456],[127.435,36.456],[127.436,36.456],[127.437,36.456],[127.436,36.456],[127.435,36.456],[127.434,36.457],[127.432,36.457],[127.431,36.457],[127.43,36.457],[127.428,36.457],[127.425,36.456],[127.424,36.456],[127.42,36.455],[127.419,36.455],[127.418,36.455],[127.417,36.455],[127.416,36.455],[127.414,36.455],[127.413,36.455],[127.412,36.455],[127.409,36.455],[127.408,36.455],[127.407,36.455],[127.406,36.455],[127.403,36.455],[127.403,36.456],[127.4,36.455],[127.4,36.456],[127.399,36.456],[127.399,36.457],[127.4,36.458],[127.4,36.462],[127.399,36.462],[127.399,36.463],[127.399,36.464],[127.4,36.465],[127.399,36.466],[127.399,36.467],[127.398,36.468],[127.398,36.469],[127.398,36.47],[127.398,36.471],[127.398,36.472],[127.399,36.472],[127.399,36.473],[127.402,36.473],[127.403,36.474],[127.404,36.477],[127.404,36.478],[127.403,36.484],[127.402,36.486]]]},"properties":{"CTPRVN_CD":"30","CTP_ENG_NM":"Daejeon","CTP_KOR_NM":"대전광역시"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[129.346,35.465],[129.408,35.493],[129.439,35.487],[129.464,35.586],[129.441,35.644],[129.354,35.679],[129.296,35.645],[129.26,35.655],[129.262,35.693],[129.205,35.721],[129.102,35.706],[129.07,35.682],[129.022,35.614],[129.019,35.584],[128.978,35.563],[129.011,35.523],[129.107,35.495],[129.14,35.449],[129.197,35.438],[129.219,35.379],[129.263,35.386],[129.28,35.341],[129.312,35.33],[129.354,35.393],[129.346,35.465]]]},"properties":{"CTPRVN_CD":"31","CTP_ENG_NM":"Ulsan","CTP_KOR_NM":"울산광역시"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[127.178,36.597],[127.194,36.565],[127.173,36.536],[127.173,36.499],[127.226,36.422],[127.326,36.422],[127.356,36.45],[127.358,36.483],[127.41,36.495],[127.402,36.541],[127.337,36.57],[127.306,36.602],[127.289,36.659],[127.197,36.728],[127.16,36.733],[127.134,36.707],[127.155,36.664],[127.155,36.607],[127.178,36.597]]]},"properties":{"CTPRVN_CD":"36","CTP_ENG_NM":"Sejong-si","CTP_KOR_NM":"세종특별자치시"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[127.127,37.469],[127.071,37.432],[127.003,37.467],[126.959,37.439],[126.903,37.434],[126.872,37.485],[126.819,37.479],[126.821,37.541],[126.763,37.547],[126.742,37.487],[126.777,37.472],[126.769,37.428],[126.69,37.335],[126.718,37.308],[126.821,37.292],[126.79,37.244],[126.687,37.262],[126.65,37.225],[126.618,37.256],[126.557,37.277],[126.561,37.237],[126.623,37.234],[126.67,37.156],[126.684,37.112],[126.789,37.03],[126.789,36.995],[126.825,36.982],[126.839,36.918],[126.857,36.908],[126.94,36.917],[126.986,36.932],[127.075,36.94],[127.112,36.972],[127.201,36.952],[127.219,36.93],[127.303,36.916],[127.35,36.953],[127.375,36.949],[127.394,36.998],[127.429,37.002],[127.46,37.046],[127.533,37.055],[127.632,37.096],[127.638,37.141],[127.689,37.136],[127.749,37.222],[127.768,37.31],[127.763,37.37],[127.804,37.432],[127.796,37.463],[127.76,37.503],[127.848,37.552],[127.755,37.592],[127.708,37.586],[127.662,37.624],[127.609,37.65],[127.559,37.628],[127.562,37.72],[127.522,37.789],[127.529,37.84],[127.617,37.906],[127.602,37.955],[127.547,37.966],[127.54,38.001],[127.458,38.017],[127.44,38.109],[127.379,38.118],[127.321,38.095],[127.276,38.125],[127.284,38.183],[127.221,38.138],[127.189,38.162],[127.175,38.205],[127.111,38.241],[127.063,38.241],[127.048,38.218],[126.986,38.2],[126.952,38.158],[126.905,38.138],[126.856,38.097],[126.852,38.035],[126.818,37.998],[126.719,37.965],[126.672,37.958],[126.666,37.919],[126.686,37.858],[126.67,37.846],[126.663,37.781],[126.531,37.75],[126.528,37.673],[126.572,37.599],[126.626,37.603],[126.672,37.634],[126.726,37.592],[126.819,37.593],[126.854,37.574],[126.897,37.589],[126.912,37.644],[126.964,37.63],[127.015,37.701],[127.096,37.689],[127.129,37.566],[127.176,37.575],[127.142,37.516],[127.157,37.49],[127.159,37.49],[127.158,37.489],[127.156,37.489],[127.155,37.488],[127.156,37.488],[127.148,37.482],[127.147,37.477],[127.144,37.476],[127.144,37.475],[127.144,37.474],[127.136,37.474],[127.135,37.474],[127.134,37.475],[127.133,37.475],[127.133,37.474],[127.133,37.472],[127.133,37.471],[127.132,37.47],[127.132,37.469],[127.132,37.468],[127.131,37.468],[127.127,37.469]],[[126.789,37.174],[126.756,37.056],[126.686,37.112],[126.75,37.168],[126.789,37.174]]]},"properties":{"CTPRVN_CD":"41","CTP_ENG_NM":"Gyeonggi-do","CTP_KOR_NM":"경기도"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[128.549,38.302],[128.513,38.346],[128.509,38.373],[128.456,38.433],[128.41,38.553],[128.372,38.591],[128.335,38.526],[128.346,38.501],[128.31,38.42],[128.269,38.416],[128.267,38.377],[128.214,38.37],[128.198,38.333],[128.113,38.328],[128.08,38.288],[127.982,38.281],[127.942,38.306],[127.895,38.313],[127.861,38.283],[127.811,38.288],[127.759,38.319],[127.703,38.309],[127.682,38.326],[127.577,38.336],[127.498,38.3],[127.465,38.319],[127.384,38.334],[127.353,38.304],[127.291,38.301],[127.242,38.333],[127.131,38.301],[127.102,38.273],[127.114,38.237],[127.163,38.238],[127.189,38.162],[127.221,38.138],[127.284,38.183],[127.276,38.125],[127.321,38.095],[127.379,38.118],[127.44,38.109],[127.458,38.017],[127.54,38.001],[127.547,37.966],[127.602,37.955],[127.617,37.906],[127.529,37.84],[127.522,37.789],[127.562,37.72],[127.559,37.628],[127.609,37.65],[127.662,37.624],[127.708,37.586],[127.755,37.592],[127.848,37.552],[127.76,37.503],[127.796,37.463],[127.804,37.432],[127.763,37.37],[127.768,37.31],[127.744,37.211],[127.756,37.171],[127.79,37.143],[127.872,37.164],[127.902,37.152],[127.934,37.176],[127.922,37.225],[127.98,37.258],[128.019,37.244],[128.037,37.189],[128.164,37.213],[128.208,37.249],[128.268,37.208],[128.314,37.223],[128.326,37.197],[128.27,37.162],[128.298,37.134],[128.335,37.157],[128.384,37.158],[128.423,37.103],[128.478,37.11],[128.549,37.087],[128.628,37.075],[128.7,37.041],[128.753,37.054],[128.774,37.088],[128.829,37.078],[128.847,37.052],[128.91,37.066],[128.923,37.092],[129.064,37.068],[129.096,37.1],[129.162,37.069],[129.195,37.041],[129.271,37.116],[129.325,37.142],[129.355,37.235],[129.267,37.323],[129.251,37.38],[129.198,37.415],[129.189,37.452],[129.122,37.521],[129.116,37.579],[129.054,37.621],[129.055,37.675],[128.879,37.829],[128.795,37.928],[128.733,38.018],[128.695,38.045],[128.669,38.086],[128.608,38.152],[128.598,38.215],[128.56,38.257],[128.549,38.302]]]},"properties":{"CTPRVN_CD":"42","CTP_ENG_NM":"Gangwon-do","CTP_KOR_NM":"강원도"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[127.493,36.238],[127.533,36.251],[127.598,36.217],[127.589,36.134],[127.653,36.057],[127.766,36.012],[127.853,36.039],[127.868,36.024],[127.961,36.07],[127.965,36.113],[127.989,36.133],[127.975,36.188],[128.01,36.209],[128.056,36.202],[128.011,36.272],[127.968,36.25],[127.892,36.292],[127.852,36.274],[127.842,36.308],[127.883,36.346],[127.864,36.403],[127.88,36.493],[127.896,36.531],[127.87,36.559],[127.798,36.586],[127.848,36.625],[127.931,36.624],[127.929,36.691],[127.957,36.736],[128.05,36.708],[128.032,36.748],[128.06,36.817],[128.093,36.803],[128.151,36.823],[128.216,36.812],[128.242,36.872],[128.282,36.856],[128.321,36.816],[128.42,36.812],[128.449,36.848],[128.424,36.877],[128.442,36.927],[128.515,36.987],[128.57,37.014],[128.582,37.043],[128.633,37.041],[128.651,37.066],[128.549,37.087],[128.478,37.11],[128.423,37.103],[128.384,37.158],[128.335,37.157],[128.298,37.134],[128.27,37.162],[128.326,37.197],[128.314,37.223],[128.268,37.208],[128.208,37.249],[128.164,37.213],[128.037,37.189],[128.019,37.244],[127.98,37.258],[127.922,37.225],[127.934,37.176],[127.902,37.152],[127.872,37.164],[127.79,37.143],[127.718,37.184],[127.689,37.136],[127.638,37.141],[127.632,37.096],[127.533,37.055],[127.46,37.046],[127.429,37.002],[127.394,36.998],[127.375,36.949],[127.35,36.953],[127.29,36.892],[127.402,36.795],[127.42,36.758],[127.365,36.762],[127.309,36.722],[127.289,36.659],[127.306,36.602],[127.337,36.57],[127.402,36.541],[127.396,36.492],[127.397,36.491],[127.398,36.49],[127.402,36.486],[127.403,36.484],[127.404,36.478],[127.404,36.477],[127.403,36.474],[127.402,36.473],[127.399,36.473],[127.399,36.472],[127.398,36.472],[127.398,36.471],[127.398,36.47],[127.398,36.469],[127.398,36.468],[127.399,36.467],[127.399,36.466],[127.4,36.465],[127.399,36.464],[127.399,36.463],[127.399,36.462],[127.4,36.462],[127.4,36.458],[127.399,36.457],[127.399,36.456],[127.4,36.456],[127.4,36.455],[127.403,36.456],[127.403,36.455],[127.406,36.455],[127.407,36.455],[127.408,36.455],[127.409,36.455],[127.412,36.455],[127.413,36.455],[127.414,36.455],[127.416,36.455],[127.417,36.455],[127.418,36.455],[127.419,36.455],[127.42,36.455],[127.424,36.456],[127.425,36.456],[127.428,36.457],[127.43,36.457],[127.431,36.457],[127.432,36.457],[127.434,36.457],[127.435,36.456],[127.436,36.456],[127.437,36.456],[127.436,36.456],[127.435,36.456],[127.434,36.456],[127.438,36.456],[127.438,36.455],[127.439,36.455],[127.439,36.454],[127.44,36.454],[127.44,36.453],[127.441,36.453],[127.441,36.452],[127.442,36.452],[127.442,36.451],[127.443,36.451],[127.444,36.45],[127.445,36.45],[127.446,36.45],[127.447,36.449],[127.45,36.449],[127.452,36.449],[127.453,36.45],[127.454,36.45],[127.456,36.451],[127.457,36.451],[127.457,36.452],[127.458,36.452],[127.459,36.452],[127.461,36.454],[127.462,36.455],[127.462,36.456],[127.463,36.456],[127.463,36.46],[127.464,36.46],[127.464,36.463],[127.464,36.464],[127.464,36.465],[127.465,36.467],[127.465,36.468],[127.466,36.468],[127.466,36.469],[127.466,36.47],[127.47,36.473],[127.47,36.474],[127.472,36.475],[127.474,36.476],[127.476,36.476],[127.481,36.477],[127.484,36.477],[127.484,36.476],[127.485,36.475],[127.484,36.474],[127.484,36.472],[127.484,36.471],[127.483,36.47],[127.483,36.469],[127.483,36.468],[127.482,36.468],[127.482,36.467],[127.481,36.466],[127.481,36.465],[127.48,36.465],[127.479,36.464],[127.479,36.463],[127.478,36.462],[127.478,36.461],[127.478,36.46],[127.477,36.459],[127.478,36.458],[127.478,36.457],[127.48,36.456],[127.482,36.454],[127.483,36.453],[127.485,36.453],[127.491,36.453],[127.493,36.454],[127.494,36.454],[127.496,36.455],[127.497,36.455],[127.498,36.455],[127.499,36.456],[127.501,36.456],[127.503,36.456],[127.503,36.455],[127.504,36.452],[127.504,36.45],[127.503,36.449],[127.502,36.449],[127.501,36.448],[127.501,36.447],[127.5,36.447],[127.499,36.446],[127.497,36.445],[127.496,36.444],[127.494,36.441],[127.493,36.44],[127.492,36.439],[127.491,36.436],[127.49,36.434],[127.49,36.432],[127.491,36.43],[127.492,36.429],[127.492,36.428],[127.493,36.427],[127.493,36.426],[127.494,36.425],[127.495,36.424],[127.496,36.421],[127.497,36.42],[127.497,36.419],[127.497,36.416],[127.498,36.415],[127.499,36.413],[127.5,36.413],[127.5,36.412],[127.502,36.409],[127.506,36.408],[127.509,36.409],[127.51,36.409],[127.511,36.41],[127.511,36.411],[127.513,36.416],[127.513,36.418],[127.514,36.419],[127.515,36.422],[127.516,36.422],[127.517,36.422],[127.517,36.421],[127.518,36.421],[127.519,36.42],[127.52,36.42],[127.521,36.421],[127.523,36.423],[127.524,36.423],[127.526,36.422],[127.526,36.421],[127.527,36.421],[127.528,36.421],[127.529,36.42],[127.533,36.419],[127.534,36.419],[127.535,36.419],[127.537,36.42],[127.538,36.42],[127.539,36.42],[127.542,36.419],[127.542,36.416],[127.546,36.409],[127.547,36.408],[127.548,36.408],[127.55,36.407],[127.551,36.406],[127.552,36.405],[127.554,36.401],[127.555,36.4],[127.557,36.4],[127.558,36.4],[127.559,36.4],[127.559,36.399],[127.56,36.398],[127.559,36.398],[127.557,36.397],[127.554,36.395],[127.551,36.395],[127.551,36.396],[127.55,36.397],[127.545,36.396],[127.537,36.395],[127.536,36.395],[127.535,36.394],[127.533,36.394],[127.533,36.393],[127.534,36.393],[127.533,36.392],[127.532,36.391],[127.531,36.391],[127.53,36.391],[127.529,36.39],[127.529,36.389],[127.528,36.389],[127.527,36.388],[127.526,36.387],[127.525,36.388],[127.525,36.386],[127.525,36.384],[127.525,36.382],[127.525,36.38],[127.526,36.379],[127.525,36.377],[127.525,36.376],[127.526,36.372],[127.526,36.368],[127.525,36.366],[127.524,36.366],[127.524,36.365],[127.525,36.364],[127.525,36.363],[127.524,36.362],[127.524,36.361],[127.524,36.36],[127.523,36.359],[127.522,36.358],[127.523,36.357],[127.523,36.356],[127.523,36.355],[127.522,36.354],[127.522,36.353],[127.52,36.351],[127.519,36.35],[127.517,36.35],[127.517,36.349],[127.517,36.348],[127.513,36.347],[127.512,36.346],[127.51,36.346],[127.51,36.347],[127.507,36.346],[127.508,36.345],[127.508,36.344],[127.507,36.343],[127.505,36.342],[127.504,36.342],[127.505,36.341],[127.504,36.341],[127.502,36.34],[127.501,36.34],[127.501,36.339],[127.501,36.337],[127.502,36.336],[127.501,36.335],[127.501,36.334],[127.501,36.333],[127.502,36.332],[127.502,36.331],[127.502,36.33],[127.502,36.328],[127.503,36.326],[127.503,36.325],[127.502,36.325],[127.502,36.324],[127.502,36.323],[127.501,36.323],[127.501,36.322],[127.5,36.322],[127.5,36.321],[127.499,36.321],[127.497,36.319],[127.497,36.318],[127.497,36.317],[127.498,36.316],[127.497,36.315],[127.497,36.314],[127.496,36.314],[127.495,36.312],[127.496,36.311],[127.499,36.307],[127.499,36.306],[127.499,36.305],[127.497,36.302],[127.497,36.301],[127.496,36.299],[127.495,36.301],[127.493,36.301],[127.492,36.3],[127.492,36.299],[127.491,36.298],[127.491,36.297],[127.492,36.296],[127.493,36.295],[127.494,36.293],[127.494,36.292],[127.495,36.291],[127.496,36.29],[127.495,36.29],[127.496,36.288],[127.498,36.286],[127.498,36.285],[127.499,36.283],[127.497,36.28],[127.495,36.278],[127.494,36.277],[127.493,36.276],[127.493,36.275],[127.491,36.274],[127.49,36.274],[127.49,36.273],[127.489,36.273],[127.489,36.272],[127.489,36.271],[127.489,36.27],[127.49,36.27],[127.49,36.269],[127.49,36.268],[127.489,36.267],[127.488,36.267],[127.488,36.265],[127.487,36.262],[127.486,36.259],[127.487,36.259],[127.49,36.258],[127.49,36.256],[127.49,36.254],[127.489,36.253],[127.488,36.252],[127.488,36.251],[127.488,36.25],[127.489,36.247],[127.489,36.246],[127.49,36.245],[127.493,36.243],[127.492,36.242],[127.493,36.239],[127.493,36.238]]]},"properties":{"CTPRVN_CD":"43","CTP_ENG_NM":"Chungcheongbuk-do","CTP_KOR_NM":"충청북도"}},
{"type":"Feature","geometry":{"type":"MultiPolygon","coordinates":[[[[126.236,36.866],[126.205,36.9],[126.184,36.81],[126.16,36.829],[126.124,36.757],[126.166,36.759],[126.156,36.677],[126.193,36.677],[126.274,36.72],[126.264,36.678],[126.291,36.665],[126.301,36.626],[126.399,36.619],[126.456,36.595],[126.488,36.527],[126.48,36.488],[126.506,36.427],[126.51,36.381],[126.546,36.355],[126.504,36.323],[126.547,36.268],[126.538,36.212],[126.509,36.151],[126.591,36.129],[126.633,36.082],[126.676,36.009],[126.736,36],[126.748,36.026],[126.803,36.034],[126.871,36.067],[126.882,36.131],[126.939,36.151],[127.04,36.139],[127.06,36.094],[127.123,36.064],[127.206,36.101],[127.273,36.107],[127.34,36.129],[127.376,36.023],[127.437,36.009],[127.457,35.983],[127.52,35.983],[127.538,36.032],[127.616,36.019],[127.613,36.112],[127.589,36.134],[127.598,36.217],[127.518,36.241],[127.467,36.222],[127.449,36.197],[127.39,36.24],[127.324,36.203],[127.283,36.235],[127.259,36.276],[127.26,36.327],[127.279,36.345],[127.258,36.408],[127.201,36.442],[127.173,36.499],[127.173,36.536],[127.194,36.581],[127.155,36.607],[127.155,36.664],[127.134,36.707],[127.16,36.733],[127.197,36.728],[127.248,36.695],[127.285,36.691],[127.333,36.748],[127.365,36.762],[127.42,36.758],[127.402,36.795],[127.356,36.829],[127.273,36.912],[127.219,36.93],[127.201,36.952],[127.112,36.972],[127.075,36.94],[126.986,36.932],[126.863,36.88],[126.817,36.896],[126.78,36.967],[126.695,37],[126.628,37.003],[126.497,37.053],[126.45,37.006],[126.353,37.005],[126.376,36.981],[126.386,36.933],[126.421,36.927],[126.37,36.857],[126.328,36.861],[126.33,36.814],[126.281,36.818],[126.313,36.884],[126.3,36.919],[126.236,36.866]]],[[[126.371,36.566],[126.339,36.606],[126.328,36.556],[126.336,36.441],[126.372,36.412],[126.435,36.422],[126.371,36.566]]]]},"properties":{"CTPRVN_CD":"44","CTP_ENG_NM":"Chungcheongnam-do","CTP_KOR_NM":"충청남도"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[126.628,35.978],[126.523,35.968],[126.532,35.933],[126.497,35.848],[126.477,35.824],[126.519,35.736],[126.556,35.698],[126.468,35.642],[126.462,35.61],[126.503,35.583],[126.593,35.59],[126.651,35.581],[126.594,35.535],[126.567,35.543],[126.484,35.519],[126.442,35.452],[126.45,35.428],[126.493,35.409],[126.483,35.381],[126.52,35.35],[126.532,35.307],[126.604,35.336],[126.644,35.32],[126.731,35.377],[126.765,35.467],[126.84,35.469],[126.897,35.448],[126.934,35.395],[127.035,35.467],[127.052,35.427],[127.039,35.38],[127.071,35.366],[127.046,35.319],[127.114,35.3],[127.168,35.332],[127.213,35.317],[127.31,35.305],[127.354,35.322],[127.393,35.307],[127.43,35.358],[127.498,35.36],[127.577,35.309],[127.621,35.332],[127.61,35.366],[127.66,35.414],[127.674,35.446],[127.625,35.531],[127.587,35.557],[127.61,35.583],[127.62,35.643],[127.661,35.71],[127.662,35.761],[127.719,35.797],[127.739,35.83],[127.854,35.881],[127.86,35.906],[127.909,35.942],[127.877,36.023],[127.853,36.039],[127.766,36.012],[127.64,36.068],[127.616,36.019],[127.538,36.032],[127.52,35.983],[127.457,35.983],[127.437,36.009],[127.376,36.023],[127.34,36.129],[127.273,36.107],[127.206,36.101],[127.123,36.064],[127.06,36.094],[127.04,36.139],[126.939,36.151],[126.882,36.131],[126.871,36.067],[126.821,36.05],[126.729,35.985],[126.628,35.978]],[[126.642,35.795],[126.628,35.749],[126.569,35.693],[126.52,35.738],[126.481,35.819],[126.541,35.943],[126.616,35.942],[126.619,35.888],[126.668,35.884],[126.707,35.797],[126.642,35.795]]]},"properties":{"CTPRVN_CD":"45","CTP_ENG_NM":"Jeollabuk-do","CTP_KOR_NM":"전라북도"}},
{"type":"Feature","geometry":{"type":"MultiPolygon","coordinates":[[[[126.593,34.162],[126.54,34.182],[126.506,34.139],[126.547,34.127],[126.593,34.162]]],[[[126.892,34.217],[126.853,34.186],[126.881,34.156],[126.922,34.184],[126.892,34.217]]],[[[126.565,34.235],[126.561,34.179],[126.622,34.2],[126.565,34.235]]],[[[126.835,34.357],[126.841,34.299],[126.879,34.326],[126.835,34.357]]],[[[126.307,34.748],[126.258,34.694],[126.281,34.6],[126.334,34.573],[126.417,34.554],[126.461,34.532],[126.472,34.469],[126.459,34.449],[126.494,34.408],[126.475,34.378],[126.527,34.335],[126.601,34.319],[126.62,34.359],[126.617,34.403],[126.727,34.446],[126.796,34.567],[126.791,34.467],[126.818,34.449],[126.925,34.453],[126.979,34.478],[126.961,34.531],[126.989,34.562],[127.013,34.625],[127.068,34.664],[127.143,34.693],[127.177,34.692],[127.241,34.765],[127.26,34.733],[127.327,34.752],[127.333,34.715],[127.315,34.664],[127.265,34.713],[127.24,34.697],[127.228,34.655],[127.173,34.627],[127.171,34.594],[127.124,34.57],[127.137,34.524],[127.221,34.535],[127.274,34.503],[127.268,34.482],[127.328,34.466],[127.378,34.504],[127.404,34.505],[127.437,34.55],[127.506,34.604],[127.475,34.658],[127.407,34.696],[127.373,34.742],[127.398,34.817],[127.417,34.833],[127.492,34.847],[127.524,34.815],[127.557,34.807],[127.593,34.744],[127.549,34.713],[127.552,34.663],[127.638,34.636],[127.625,34.699],[127.655,34.746],[127.705,34.72],[127.751,34.736],[127.745,34.775],[127.776,34.856],[127.698,34.859],[127.638,34.827],[127.59,34.877],[127.671,34.931],[127.701,34.931],[127.754,34.962],[127.785,35.021],[127.695,35.106],[127.694,35.128],[127.648,35.16],[127.618,35.2],[127.619,35.236],[127.568,35.319],[127.498,35.36],[127.43,35.358],[127.393,35.307],[127.354,35.322],[127.31,35.305],[127.213,35.317],[127.168,35.332],[127.114,35.3],[127.046,35.319],[127.071,35.366],[127.039,35.38],[127.052,35.427],[127.035,35.467],[126.934,35.395],[126.897,35.448],[126.84,35.469],[126.765,35.467],[126.731,35.377],[126.644,35.32],[126.604,35.336],[126.532,35.307],[126.52,35.35],[126.483,35.381],[126.493,35.409],[126.439,35.43],[126.406,35.387],[126.37,35.284],[126.334,35.283],[126.3,35.211],[126.355,35.184],[126.419,35.11],[126.462,35.102],[126.445,35.058],[126.404,35.026],[126.392,35.066],[126.353,35.078],[126.33,35.108],[126.333,35.149],[126.16,35.099],[126.163,35.068],[126.231,35.024],[126.275,35.034],[126.345,35.071],[126.349,34.977],[126.295,34.965],[126.333,34.917],[126.374,34.941],[126.407,34.852],[126.351,34.797],[126.389,34.781],[126.386,34.732],[126.355,34.693],[126.307,34.748]],[[126.809,35.052],[126.776,35.053],[126.736,35.108],[126.652,35.12],[126.657,35.167],[126.736,35.251],[126.806,35.219],[126.905,35.258],[126.931,35.251],[126.972,35.185],[127,35.189],[127.012,35.128],[126.989,35.095],[126.936,35.074],[126.921,35.092],[126.809,35.052]]],[[[126.654,34.328],[126.689,34.297],[126.752,34.291],[126.756,34.315],[126.726,34.383],[126.685,34.402],[126.639,34.383],[126.655,34.329],[126.654,34.328]]],[[[126.944,34.413],[126.931,34.391],[126.885,34.404],[126.864,34.373],[126.918,34.356],[126.944,34.413]]],[[[126.834,34.443],[126.787,34.432],[126.764,34.407],[126.772,34.375],[126.854,34.392],[126.834,34.443]]],[[[127.457,34.476],[127.494,34.431],[127.536,34.449],[127.457,34.476]]],[[[127.217,34.495],[127.098,34.466],[127.124,34.432],[127.217,34.436],[127.234,34.483],[127.217,34.495]]],[[[127.46,34.545],[127.451,34.483],[127.493,34.484],[127.479,34.537],[127.46,34.545]]],[[[127.741,34.553],[127.712,34.538],[127.739,34.503],[127.792,34.501],[127.741,34.553]]],[[[126.25,34.588],[126.251,34.561],[126.173,34.485],[126.119,34.459],[126.093,34.428],[126.117,34.38],[126.143,34.385],[126.174,34.352],[126.263,34.379],[126.265,34.397],[126.325,34.408],[126.365,34.443],[126.369,34.515],[126.304,34.571],[126.25,34.588]]],[[[126.017,34.635],[126.011,34.606],[126.029,34.566],[126.062,34.591],[126.017,34.635]]],[[[126.154,34.672],[126.116,34.653],[126.143,34.619],[126.187,34.65],[126.154,34.672]]],[[[127.74,34.734],[127.762,34.685],[127.71,34.623],[127.75,34.593],[127.79,34.585],[127.795,34.667],[127.74,34.734]]],[[[125.963,34.737],[125.916,34.711],[125.94,34.665],[126.01,34.688],[125.963,34.737]]],[[[126.09,34.774],[126.082,34.72],[126.137,34.729],[126.171,34.749],[126.09,34.774]]],[[[125.994,34.805],[125.9,34.769],[125.887,34.739],[125.998,34.762],[125.994,34.805]]],[[[126.116,34.882],[126.061,34.844],[126.097,34.806],[126.149,34.84],[126.148,34.873],[126.116,34.882]]],[[[126.09,34.903],[126.017,34.91],[125.988,34.875],[126.04,34.847],[126.083,34.866],[126.09,34.903]]],[[[127.731,34.952],[127.705,34.913],[127.761,34.909],[127.731,34.952]]],[[[126.136,35.025],[126.144,34.969],[126.18,34.994],[126.136,35.025]]],[[[126.151,35.146],[126.118,35.14],[126.048,35.081],[126.095,35.052],[126.114,35.064],[126.122,35.131],[126.151,35.146]]]]},"properties":{"CTPRVN_CD":"46","CTP_ENG_NM":"Jellanam-do","CTP_KOR_NM":"전라남도"}},
{"type":"Feature","geometry":{"type":"MultiPolygon","coordinates":[[[[129.579,36.052],[129.54,36.066],[129.45,35.991],[129.396,36.018],[129.377,36.047],[129.432,36.111],[129.395,36.14],[129.374,36.25],[129.379,36.333],[129.429,36.409],[129.446,36.503],[129.44,36.552],[129.41,36.593],[129.438,36.671],[129.476,36.699],[129.477,36.766],[129.421,36.863],[129.41,37.023],[129.427,37.064],[129.376,37.102],[129.364,37.146],[129.325,37.142],[129.271,37.116],[129.195,37.041],[129.096,37.1],[129.064,37.068],[128.923,37.092],[128.91,37.066],[128.847,37.052],[128.829,37.078],[128.774,37.088],[128.753,37.054],[128.7,37.041],[128.646,37.061],[128.633,37.041],[128.582,37.043],[128.57,37.014],[128.515,36.987],[128.442,36.927],[128.424,36.877],[128.449,36.848],[128.42,36.812],[128.321,36.816],[128.282,36.856],[128.242,36.872],[128.216,36.812],[128.151,36.823],[128.093,36.803],[128.06,36.817],[128.032,36.748],[128.05,36.708],[127.957,36.736],[127.929,36.691],[127.931,36.624],[127.848,36.625],[127.798,36.586],[127.87,36.559],[127.896,36.531],[127.88,36.493],[127.864,36.403],[127.883,36.346],[127.842,36.308],[127.852,36.274],[127.892,36.292],[127.968,36.25],[128.011,36.272],[128.056,36.202],[128.01,36.209],[127.975,36.188],[127.989,36.133],[127.965,36.113],[127.961,36.07],[127.883,36.032],[127.909,35.942],[127.883,35.93],[127.893,35.887],[128.012,35.829],[128.07,35.841],[128.124,35.82],[128.136,35.785],[128.189,35.752],[128.205,35.684],[128.201,35.644],[128.262,35.643],[128.306,35.655],[128.4,35.646],[128.357,35.682],[128.412,35.696],[128.432,35.726],[128.383,35.759],[128.421,35.809],[128.47,35.806],[128.473,35.833],[128.473,35.834],[128.436,35.848],[128.384,35.853],[128.398,35.893],[128.431,35.931],[128.476,35.934],[128.475,35.894],[128.529,35.924],[128.546,35.966],[128.617,36.007],[128.696,36.016],[128.746,35.973],[128.738,35.928],[128.76,35.866],[128.709,35.827],[128.683,35.79],[128.695,35.756],[128.683,35.721],[128.624,35.703],[128.581,35.739],[128.528,35.713],[128.537,35.624],[128.6,35.58],[128.658,35.598],[128.758,35.567],[128.854,35.597],[128.915,35.641],[128.983,35.609],[129.047,35.651],[129.102,35.706],[129.205,35.721],[129.262,35.693],[129.26,35.655],[129.296,35.645],[129.354,35.679],[129.45,35.651],[129.465,35.667],[129.496,35.772],[129.491,35.784],[129.532,35.871],[129.518,35.92],[129.575,36.004],[129.579,36.052]]],[[[130.906,37.549],[130.794,37.513],[130.812,37.473],[130.875,37.458],[130.914,37.487],[130.906,37.549]]]]},"properties":{"CTPRVN_CD":"47","CTP_ENG_NM":"Gyeongsangbuk-do","CTP_KOR_NM":"경상북도"}},
{"type":"Feature","geometry":{"type":"MultiPolygon","coordinates":[[[[128.351,34.841],[128.407,34.762],[128.44,34.795],[128.44,34.823],[128.351,34.841]]],[[[128.031,34.922],[127.996,34.91],[127.962,34.869],[127.971,34.842],[128.045,34.836],[128.061,34.879],[128.031,34.922]]],[[[127.891,34.947],[127.81,34.859],[127.813,34.835],[127.852,34.769],[127.853,34.739],[127.885,34.723],[127.903,34.763],[127.949,34.778],[127.959,34.71],[128.027,34.718],[128.056,34.746],[128.049,34.782],[128.064,34.817],[127.991,34.833],[127.944,34.809],[127.897,34.874],[127.929,34.916],[127.891,34.947]]],[[[128.467,34.882],[128.429,34.918],[128.42,34.954],[128.501,35.015],[128.46,35.063],[128.374,35.03],[128.373,35.05],[128.471,35.081],[128.539,35.114],[128.607,35.058],[128.597,35.143],[128.564,35.187],[128.632,35.221],[128.589,35.199],[128.61,35.144],[128.696,35.139],[128.695,35.097],[128.812,35.078],[128.842,35.106],[128.843,35.158],[128.881,35.183],[128.886,35.214],[128.999,35.238],[129.017,35.275],[129.045,35.275],[129.112,35.31],[129.149,35.364],[129.178,35.352],[129.219,35.407],[129.197,35.438],[129.14,35.449],[129.107,35.495],[129.011,35.523],[128.978,35.563],[129.019,35.584],[128.915,35.641],[128.854,35.597],[128.758,35.567],[128.658,35.598],[128.6,35.58],[128.506,35.64],[128.446,35.638],[128.431,35.622],[128.365,35.613],[128.349,35.646],[128.306,35.655],[128.262,35.643],[128.201,35.644],[128.205,35.684],[128.189,35.752],[128.136,35.785],[128.124,35.82],[128.07,35.841],[128.012,35.829],[127.933,35.864],[127.919,35.89],[127.854,35.881],[127.739,35.83],[127.719,35.797],[127.662,35.761],[127.661,35.71],[127.62,35.643],[127.61,35.583],[127.587,35.557],[127.625,35.531],[127.674,35.446],[127.66,35.414],[127.61,35.366],[127.621,35.332],[127.576,35.306],[127.619,35.236],[127.618,35.2],[127.648,35.16],[127.694,35.128],[127.695,35.106],[127.785,35.021],[127.763,34.976],[127.782,34.944],[127.872,34.946],[127.91,34.975],[127.927,35.013],[127.968,34.992],[128.02,35.005],[128.05,34.969],[128.055,34.929],[128.2,34.894],[128.199,34.933],[128.256,34.937],[128.28,34.908],[128.329,34.955],[128.356,34.909],[128.311,34.886],[128.387,34.867],[128.397,34.833],[128.452,34.847],[128.467,34.882]]],[[[128.659,34.981],[128.587,34.945],[128.608,34.917],[128.565,34.899],[128.535,34.922],[128.473,34.877],[128.482,34.84],[128.519,34.822],[128.589,34.846],[128.587,34.716],[128.656,34.742],[128.672,34.815],[128.743,34.868],[128.715,34.958],[128.697,34.973],[128.712,35.031],[128.677,35.033],[128.659,34.981]]]]},"properties":{"CTPRVN_CD":"48","CTP_ENG_NM":"Gyeongsangnam-do","CTP_KOR_NM":"경상남도"}},
{"type":"Feature","geometry":{"type":"Polygon","coordinates":[[[126.768,33.564],[126.73,33.56],[126.586,33.526],[126.511,33.516],[126.386,33.489],[126.263,33.436],[126.263,33.417],[126.164,33.337],[126.162,33.292],[126.184,33.259],[126.235,33.236],[126.27,33.196],[126.327,33.241],[126.37,33.232],[126.41,33.246],[126.471,33.227],[126.52,33.241],[126.599,33.236],[126.653,33.27],[126.743,33.279],[126.776,33.307],[126.829,33.307],[126.88,33.382],[126.906,33.392],[126.924,33.453],[126.902,33.481],[126.893,33.526],[126.861,33.525],[126.808,33.556],[126.768,33.564]]]},"properties":{"CTPRVN_CD":"50","CTP_ENG_NM":"Jeju-do","CTP_KOR_NM":"제주특별자치도"}}
]}
''';
class MyHttpOverrides extends HttpOverrides{
  @override
  HttpClient createHttpClient(SecurityContext? context){
    return super.createHttpClient(context)
      ..badCertificateCallback = (X509Certificate cert, String host, int port)=> true;
  }
}
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  MobileAds.instance.initialize();
  HttpOverrides.global = MyHttpOverrides();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  if(Get.deviceLocale.toString() == 'en_US') {
    local = 'en';
    localUrl = 'EngService1';
  } else if(Get.deviceLocale.toString() == 'ja_JP'){
    local = 'ja';
    localUrl = 'JpnService1';
  } else {
    // localUrl = 'EngService1';
    // local = 'en';
    local = 'en';
    localUrl = 'EngService1';
  }
  _getToken();
  FirebaseMessaging.instance.requestPermission(
    alert: true,
    announcement: false,
    badge: true,
    carPlay: false,
    criticalAlert: false,
    provisional: false,
    sound: true,
  );
  FirebaseMessaging.onMessage.listen((RemoteMessage message) {
    print('푸시 메시지 수신: ${message.messageId}');
    print('message${message.data}');
    // 포그라운드 알림을 직접 표시하거나 원하는 작업 수행
  });
  runApp(const MyApp());
}

// FCM 토큰 가져오는 함수
void _getToken() async {
  // FirebaseMessaging messaging = FirebaseMessaging.instance;
  //
  // // 기기의 FCM 토큰 가져오기
  // String? token = await messaging.getToken();
  // print('\n\n\n\n\n\n\n\n\gfn\fgn\gf\ng\n\gng\fn\fgn\n\n\n\n\n\n');
  //   print(token);
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return GetMaterialApp(
      color: Colors.white,
      translations: Languages(),
      locale: Get.deviceLocale,
      fallbackLocale: const Locale('en', 'US'),
      theme: ThemeData(
        // colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
          useMaterial3: true,
          fontFamily: 'Pretendard',
          scaffoldBackgroundColor: Colors.white,
          appBarTheme: const AppBarTheme(
            backgroundColor:  Colors.white,
          )
      ),
      initialRoute: '/',
      localizationsDelegates: const [
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
        FlutterQuillLocalizations.delegate,
      ],
      supportedLocales: const [
        Locale('en', 'US'),
        Locale('ko', 'KR'), // 한국어
        // 다른 언어 지원이 필요하다면 여기에 추가
      ],
      getPages: [
        GetPage(name: '/', page: () => const MainHome()),
        GetPage(name: '/vectorMap', page:()=> const VectorMapView()),
        GetPage(name: '/infoPage', page: () => const InfoPage()),
        GetPage(name: '/communityPage', page: () => const CommunityPage()),
        GetPage(name: '/ar', page: () =>  const ArPage()),
        // GetPage(name: '/ar', page: () =>  ARCoreExample()),
        // GetPage(name: '/signupPage', page: () => const SignupPage()),
        // GetPage(name: '/chatList', page: () => const ChatList()),
        // GetPage(name: '/chatInvitation', page: () => const ChatInvitation()),
        // GetPage(name: '/QRViewExample', page: () => const QRViewExample()),
        // GetPage(name:'/myPageHome',page:()=> const MyPageHome()),
        // GetPage(name:'/editWorkTime',page:()=> const EditWorkTime()),
        // GetPage(name:'/editMyInfo',page:()=> const EditMyInfo()),
        // GetPage(name:'/postPage',page:()=> const PostPage()),
        // GetPage(name:'/placePost',page:()=> PlacePost()),
        // GetPage(name:'/placePostDetail',page:()=> const PlacePostDetail()),
        // GetPage(name:'/reportList',page:()=> const ReportList()),
        // GetPage(name:'/reportWrite',page:()=> const ReportWrite()),
        // GetPage(name:'/payPageDetail',page:()=> const PayPageDetail()),
        // GetPage(name: '/customerInfoDetail', page: () => const CustomerInfoDetail()),
        // GetPage(name: '/reportRegistration', page: () => const ReportRegistration()),
        // GetPage(name: '/reportList', page: () => const ReportList()),
        // GetPage(name: '/login', page: () => const LoginView()),
      ],
    );
  }
}
class Splash extends StatefulWidget {
  const Splash({super.key});

  @override
  State<Splash> createState() => SplashState();
}
class SplashState extends State<Splash>  {

  bool isSplashDone = false;

  List choiceImage = [
    {
      'choice1':'choiceImage1_1.png',
      'choice2':'choiceImage1_2.png',
      'choice3':'choiceImage1_3.png',
      'text':'ⓒ한국관광공사 사진갤러리 - 오도연,전우석,최서연'
    },
    {
      'choice1':'choiceImage2_1.png',
      'choice2':'choiceImage2_2.png',
      'choice3':'choiceImage2_3.png',
      'text':'ⓒ한국관광공사 사진갤러리 - IR 스튜디오,지병선,조광연'
    },
    {
      'choice1':'choiceImage3_1.png',
      'choice2':'choiceImage3_2.png',
      'choice3':'choiceImage3_3.png',
      'text':'ⓒ한국관광공사 사진갤러리 - 정성주,한국관광공사 조우진,김용천'
    },
  ];
  String choiceValue = '';
  int randomNum = 0;

  isSplash() async {
    await Future.delayed(const Duration(milliseconds: 2500),(){
      setState(() {
        isSplashDone = true;
      });
    });
  }

  @override
  void initState() {
    super.initState();
    randomNum = Random().nextInt(3);
    isSplash();
  }
  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    return Scaffold(
      body: isSplashDone ?
      Container(
        width: size.width*1,
        height: size.height,
        decoration:  BoxDecoration(
          image: DecorationImage(
            colorFilter:ColorFilter.mode(Colors.black.withOpacity(0.5), BlendMode.dstATop),
            image:  const AssetImage('image/behindGirl.jpg',),
            fit: BoxFit.cover,
          ),
          color: Colors.black,
        ),
        child: Stack(
          alignment: Alignment.center,
          children: [
            Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Container(
                  margin: const EdgeInsets.only(bottom: 50),
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: [
                      GestureDetector(
                        onTap: (){
                          setState(() {
                            Navigator.push(
                                context, MaterialPageRoute(builder: (_) {
                              return const HomePage(dropdownValue: 'Festival');
                            }));
                          });
                        },
                        child: SizedBox(
                          width: size.width*0.47,
                          height: size.width*0.47,
                          child: ClipRRect(
                            borderRadius: BorderRadius.circular(8.0),
                            child: Image(
                              image: AssetImage('image/${choiceImage[randomNum]['choice1']}'),
                            ),
                          ),
                        ),
                      ),
                      GestureDetector(
                        onTap: (){
                          setState(() {
                            Navigator.push(
                                context, MaterialPageRoute(builder: (_) {
                              return const HomePage(dropdownValue: 'Culture');
                            }));
                          });
                        },
                        child: SizedBox(
                          width: size.width*0.47,
                          height: size.width*0.47,
                          child: ClipRRect(
                            borderRadius: BorderRadius.circular(8.0),
                            child: Image(
                              image: AssetImage('image/${choiceImage[randomNum]['choice2']}'),
                            ),
                          ),
                        ),
                      )
                    ],
                  ),
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceAround,
                  children: [
                    GestureDetector(
                      onTap: (){
                        setState(() {
                          // Navigator.push(
                          //     context, MaterialPageRoute(builder: (_) {
                          //   return const YoutubePage();
                          // }));
                        });
                      },
                      child: SizedBox(
                        width: size.width*0.47,
                        height: size.width*0.47,
                        child: ClipRRect(
                          borderRadius: BorderRadius.circular(8.0),
                          child: Image(
                            image: AssetImage('image/${choiceImage[randomNum]['choice3']}'),
                          ),
                        ),
                      ),
                    ),
                    GestureDetector(
                      onTap: (){
                        setState(() {
                          // Navigator.push(
                          //     context, MaterialPageRoute(builder: (_) {
                          //   return const WorldCupPage();
                          // }));
                        });
                      },
                      child:Container(
                        alignment: Alignment.center,
                        width: size.width*0.47,
                        height: size.width*0.47,
                        decoration: const BoxDecoration(
                          borderRadius: BorderRadius.all(Radius.circular(8)),
                          color: Colors.black
                        ),
                        child: const GradientText(
                          text: 'VS', gradient: LinearGradient(colors: [
                          Colors.redAccent,
                          Colors.yellowAccent,
                        ]),
                          style: TextStyle(fontSize: 65.0,fontFamily: 'Kalam'),),
                      )
                    ),
                  ],
                )
              ],
            ),
            Positioned(
                bottom: 8,
                right: 8,
                child: Text(choiceImage[randomNum]['text'],style: const TextStyle(
                    fontSize: 12,
                    fontWeight: FontWeight.w600,
                    color: Colors.white
                ),)
            )
          ],
        ),
      )
          : Stack(
        alignment: Alignment.center,
        children: [
          SizedBox(
              width: size.width,
              height: size.height,
              child: const Image(image: AssetImage('image/splashImage.png'),fit: BoxFit.cover,)
          ),
          const Positioned(
              bottom: 8,
              right: 8,
              child: Text('ⓒ한국관광공사 사진갤러리 - Pham Tuyen',style: TextStyle(
                  fontSize: 13,
                  color: Colors.white,
                  fontWeight: FontWeight.w600
              ),)
          )
        ],
      ),
    );
  }
}

class HomePage extends StatefulWidget {
  final String dropdownValue;
  const HomePage({super.key, required this.dropdownValue});

  @override
  State<HomePage> createState() => _HomePageState();
}
class _HomePageState extends State<HomePage> with TickerProviderStateMixin {
  //① ⓒ한국관광공사 사진갤러리 - IR스튜디오, 전형준
  // ② ⓒ한국관광공사 사진갤러리 - 윤대성, 김지호
  // ③ ⓒ한국관광공사 사진갤러리 - 서영균, 이범수

  List<Model> data = <Model>[
    Model('Seoul'),
    Model('Busan'),
    Model('Daegu'),
    Model('Incheon'),
    Model('Gwangju'),
    Model('Daejeon'),
    Model('Ulsan'),
    Model('Sejong-si'),
    Model('Gyeonggi-do'),
    Model('Gangwon-do'),
    Model('Chungcheongbuk-do'),
    Model('Chungcheongnam-do'),
    Model('Jeollabuk-do'),
    Model('Jellanam-do'),
    Model('Gyeongsangbuk-do'),
    Model('Gyeongsangnam-do'),
    Model('Jeju-do')
  ];
  List festivalItem = [];
  List cultureItem = [];
  List item = [];

  int selectedIndex = 0;
  int randomNum = 0;

  String dropdownValue = 'Festival';

  double translateX = 0.0;
  double translateY = 0.0;
  double scale = 83.08435860753484;

  bool splash = false;
  bool loading = false;
  bool firstChoice  = false;

  late TabController _tabController;
  late TabController tabAreaCodeController;

  late VectorMapController _controller;
  late MapDataSource polygons;
  // Future<void> getFestivalItem () async {
  //   try {
  //     Future.delayed(const Duration(milliseconds: 2500),(){
  //       setState(() {
  //         splash = true;
  //       });
  //     });
  //     String url = 'https://apis.data.go.kr/B551011/EngService1/searchFestival1?serviceKey=akHKlagTZpkQLeNR8HA730172lY0QXOLtzt%2BXt6dUo29FxJMLtX%2BrOvT4tW0%2BUjy7sXjEKzIs4y2uMJK9ZefcA%3D%3D&numOfRows=1000&pageNo=1&MobileOS=ETC&MobileApp=NowKorea&_type=json&listYN=Y&arrange=R&eventStartDate=20230101&eventEndDate=20251231';
  //     http.Response response = await http.get(
  //       Uri.parse(url),
  //       headers: {"Content-Type": "application/json"},
  //     );
  //     var data = utf8.decode(response.bodyBytes);
  //     var dataJson = jsonDecode(data);
  //     setState(() {
  //       festivalItem = dataJson['response']['body']['items']['item'];
  //       festivalLoading = true;
  //     });
  //   } catch(e){
  //     print(e);
  //   }
  // }
  Future<void> getTourItem () async {
    try {
      Future.delayed(const Duration(milliseconds: 2500),(){
        setState(() {
          splash = true;
        });
      });
      // String url = 'https://apis.data.go.kr/B551011/EngService1/areaBasedList1?serviceKey=akHKlagTZpkQLeNR8HA730172lY0QXOLtzt%2BXt6dUo29FxJMLtX%2BrOvT4tW0%2BUjy7sXjEKzIs4y2uMJK9ZefcA%3D%3D&numOfRows=1000&pageNo=1&MobileOS=ETC&MobileApp=NowKorea&_type=json&listYN=Y&arrange=Q&contentTypeId=78';
      String url = 'https://lsagwanaklucky.com/nowKorea/itemInfo';
      http.Response response = await http.get(
        Uri.parse(url),
        headers: {"Content-Type": "application/json"},
      );
      var dataJson = jsonDecode(response.body);
      for(var i in dataJson['message']){
        if(i['category'] == 'Festival'){
          festivalItem = i['item'];
        } else if(i['category'] == 'Cultural'){
          cultureItem = i['item'];
        }
      }
      setState(() {
        if(dropdownValue == 'Festival' ){
          item = festivalItem;
        } else if(dropdownValue == 'Culture'){
          item = cultureItem;
        }
        loading = true;
      });
    } catch(e){
      print(e);
    }
  }
  showModal (List itemList){
    DateTime time =DateTime.now();
    List ingItem = [];
    for(var i in itemList){
      if(dropdownValue == 'Culture'){
        if(i['firstimage'] != '') {
          ingItem.add(i);
        }
      }else if(time.compareTo(DateTime.parse(i['eventenddate']))<0 && i['firstimage'] != '' ){
        ingItem.add(i);
      }
    }
    if(ingItem.isEmpty){
      showDialog(
          context: context,
          //barrierDismissible - Dialog를 제외한 다른 화면 터치 x
          // barrierDismissible: false,
          builder: (BuildContext context) {
            return const AlertDialog(
                title: Text( 'There are no events in progress',textAlign: TextAlign.center,)
            );
          });
    } else {
      showDialog(
          context: context,
          //barrierDismissible - Dialog를 제외한 다른 화면 터치 x
          // barrierDismissible: false,
          builder: (BuildContext context) {
            return AlertDialog(
              // RoundedRectangleBorder - Dialog 화면 모서리 둥글게 조절
              shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10.0)),
              //Dialog Main Title
              title: Text(data[selectedIndex].name,textAlign: TextAlign.center,),
              content: SizedBox(
                width: 500,
                child: Stack(
                  children: [
                    ListView.separated(
                      itemCount:ingItem.length,
                      shrinkWrap: true,
                      itemBuilder: (BuildContext ctx, int index) {
                        List title = ingItem[index]['title'].split('(');
                        DateTime eventStartDate = DateTime.now();
                        DateTime eventEndDate = DateTime.now();
                        bool isIng= false;
                         if(dropdownValue == 'Festival'){
                           eventStartDate = DateTime.parse(ingItem[index]['eventstartdate']);
                           eventEndDate   = DateTime.parse(ingItem[index]['eventenddate']);
                           if(time.compareTo(eventStartDate)>0) {
                             isIng = true;
                           }
                         }
                        return
                          ingItem[index]['firstimage'] == '' ?Container():
                          GestureDetector(
                            onTap: (){
                              Navigator.push(
                                  context, MaterialPageRoute(builder: (_) {
                                return ItemPage(item: ingItem[index],festivalOrCulture:dropdownValue == 'Festival');
                              }));
                            },
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.center,
                              children: [
                                Column(
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text('${title[0]}',style: const TextStyle(
                                        fontSize: 17,
                                        fontWeight: FontWeight.w600,
                                    ),textAlign: TextAlign.center,),
                                    Text('(${title[1]}'),
                                    dropdownValue == 'Festival' ? Container(
                                      margin: const EdgeInsets.symmetric(vertical: 5),
                                      child: Text('${eventStartDate.month} / ${eventStartDate.day} / ${eventStartDate.year} ~ ${eventEndDate.month} / ${eventEndDate.day} / ${eventEndDate.year}',
                                        style: const TextStyle(fontWeight: FontWeight.w600),),
                                    ):Container()
                                  ],
                                ),
                                Stack(
                                  alignment: Alignment.center,
                                  children: [
                                    Image(
                                      image: NetworkImage(ingItem[index]['firstimage']),
                                      loadingBuilder: (BuildContext context, Widget child,
                                          ImageChunkEvent? loadingProgress) {
                                        if (loadingProgress == null) {
                                          return child;
                                        }
                                        return  lottie.Lottie.asset('image/koreaLottie.json',width: 100,height: 100);
                                      },
                                    ),
                                    dropdownValue == 'Culture'? Container():Positioned(
                                        right: 0,
                                        top: 0,
                                        child: Container(
                                          alignment: Alignment.center,
                                          width: isIng? 80:60,
                                          height: 30,
                                          decoration: BoxDecoration(
                                              color:isIng ?  Colors.blueAccent :Colors.deepPurpleAccent,
                                              borderRadius: const BorderRadius.all(Radius.circular(8))
                                          ),
                                          child: Text(isIng ? 'ongoing':'soon',style: const TextStyle(
                                              fontWeight: FontWeight.w600,
                                              color: Colors.white
                                          ),),
                                        )
                                    )
                                  ],
                                )
                              ],
                            ),
                          );
                      },
                      separatorBuilder: (BuildContext context, int index) {
                        return const Divider();
                      },
                    ),
                    Positioned(
                      bottom: 0,
                      right: 0,
                      child: Container(
                        decoration: const BoxDecoration(
                          borderRadius: BorderRadius.all(Radius.circular(90)),
                          color: Color(0xff006FFF),
                        ),
                        child: IconButton(
                          color: Colors.white,
                          icon: const Icon(Icons.map,size: 55),
                          onPressed: (){
                            Navigator.push(
                                context, MaterialPageRoute(builder: (_) {
                              return MapPage(item: ingItem,name:data[selectedIndex].name,index: selectedIndex,);
                            }));
                          },
                        ),
                      ),)
                  ],
                ),
              ),
            );
          });
    }
  }
  // late MapShapeSource _mapSource;


  loadVectorMap() async{
    _controller = VectorMapController(delayToRefreshResolution: 0,minScale:scale );
    polygons = await MapDataSource.geoJson(geoJson: koreaGeoJson,keys:['CTP_ENG_NM'],labelKey:'CTP_ENG_NM' );
    setState(() {
      MapLayer layer = MapLayer(
          dataSource: polygons,
          theme: MapRuleTheme(
              contourColor:Colors.black26,
              colorRules: [
                (feature) {
              int? value = feature.id -1;
              return value == 0 ?  Colors.deepPurpleAccent: null;
            },
          ])
      );
      _controller.addLayer(layer);
    });
  }
  @override
  void initState() {
    super.initState();
    dropdownValue = widget.dropdownValue;
    // getFestivalItem();
    getTourItem();
    loadVectorMap();
    _tabController = TabController(
      length: data.length,
      vsync: this,  //vsync에 this 형태로 전달해야 애니메이션이 정상 처리됨
    );
    tabAreaCodeController = TabController(
      length: 2,
      vsync: this,  //vsync에 this 형태로 전달해야 애니메이션이 정상 처리됨
    );
  }
  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    return Scaffold(
      appBar: AppBar(
        leadingWidth:0,
        leading: Container(),
        centerTitle: false,
        title:  DropdownButton<String>(
          // Step 3.
          value: dropdownValue,
          // Step 4.
          items: <String>['Festival', 'Culture']
              .map<DropdownMenuItem<String>>((String value) {
            return DropdownMenuItem<String>(
              value: value,
              child: Row(
                children: [
                  Text(
                    value,
                    style: const TextStyle(fontSize: 25),
                  ),
                  // const Icon(Icons.ac_unit)
                ],
              ),
            );
          }).toList(),
          // Step 5.
          onChanged: (String? newValue) {
            setState(() {
              dropdownValue = newValue!;
              item = dropdownValue == 'Festival' ?festivalItem : cultureItem;
              Get.snackbar('', newValue);
            });
          },
        ),
      ),
      body: SafeArea(
        child: loading?
        Column (
          children: [
            // Container(
            //   width: size.width,
            //   height: 40,
            //   margin: const EdgeInsets.only(bottom: 12,top: 8),
            //   child: TabBar(
            //     isScrollable : false,
            //     tabs:const [
            //       Text('Festival',style: TextStyle(
            //         // color: Colors.black45,
            //           fontSize: 19
            //       ),),
            //       Text('Culture',style: TextStyle(
            //         // color: Colors.black45,
            //           fontSize: 19
            //       ),)
            //     ],
            //     onTap:(int index){
            //       setState(() {
            //         festivalOrCulture = index == 0 ? true:false;
            //       });
            //     },
            //     // indicatorColor:Colors.purple ,
            //     labelColor: Colors.black,
            //     unselectedLabelColor: Colors.black45,
            //     controller: tabAreaCodeController,
            //   ),
            // ),
            SizedBox(
              width: size.width,
              height: 40,
              child: TabBar(
                isScrollable : true,
                tabs:data.map((Model choice){
                  return Text(choice.name,style: const TextStyle(
                    // color: Colors.black45,
                      fontSize: 19
                  ),);
                }).toList(),
                onTap:(int index){
                  setState(() {
                    MapLayer layer = MapLayer(
                        dataSource: polygons,
                        theme: MapRuleTheme(contourColor:Colors.black26, colorRules: [
                              (feature) {
                            int? value = feature.id - 1;
                            return value == index ? Colors.deepPurpleAccent : null;
                          },
                        ])
                    );
                    selectedIndex = index;
                    _controller = VectorMapController(layers: [layer], delayToRefreshResolution: 0 ,minScale: scale);
                    List itemList = [];

                    for(var i in item){
                      String where = i['addr1'].replaceAll(RegExp('\\s'), "");
                      List<String> j = where.split(',');
                      if(data[selectedIndex].name == j[j.length-1]){
                        itemList.add(i);
                      }
                    }
                    showModal(itemList);
                  });

                },
                // indicatorColor:Colors.purple ,
                labelColor: Colors.black,
                unselectedLabelColor: Colors.black45,
                controller: _tabController,
              ),
            ),
            Expanded(
                child:
                Stack(
                  alignment: Alignment.center,
                  children: [
                    VectorMap(
                      controller: _controller,
                      clickListener: (feature) => {
                        setState((){
                          _tabController.index = feature.id-1;
                          selectedIndex =feature.id-1;
                          MapLayer layer = MapLayer(
                              dataSource: polygons,
                              theme: MapRuleTheme(contourColor:Colors.black26, colorRules: [
                                    (feature) {
                                  int? value = feature.id - 1;
                                  return value == selectedIndex  ? Colors.deepPurpleAccent : null;
                                },
                              ])
                          );
                          _controller = VectorMapController(layers: [layer], delayToRefreshResolution: 0,minScale:scale );
                          List itemList = [];
                          for(var i in item){
                            String where = i['addr1'].replaceAll(RegExp('\\s'), "");
                            List<String> j = where.split(',');
                            if(data[selectedIndex].name == j[j.length-1]){
                              itemList.add(i);
                            }
                          }
                          showModal(itemList);})
                      },
                    ),
                    const Positioned(
                        bottom: 0,
                        child: MainBanner()
                    ),
                    Positioned(
                        bottom: 27,
                        right: 16,
                        child: Container()
                    ),
                  ],
                )
            ),
          ],
        ): Center( child: lottie.Lottie.asset('image/koreaLottie.json',width: 150,height: 150),) ,
      ),
      floatingActionButton:  !firstChoice ? Container():loading?Column(
        mainAxisAlignment: MainAxisAlignment.end,
        children: [
          // Container(
          //   margin: const EdgeInsets.only(bottom: 9),
          //   decoration: const BoxDecoration(
          //       color: Colors.deepPurpleAccent,
          //       borderRadius: BorderRadius.all(Radius.circular(90))
          //   ),
          //   child: IconButton(
          //     color: Colors.white,
          //     onPressed: (){
          //       Navigator.push(
          //           context, MaterialPageRoute(builder: (_) {
          //         return ChatGPT();
          //       }));
          //     },
          //     icon: const Icon(Icons.remove_circle_outline,size: 37),
          //   ),
          // ),
          Container(
            margin: const EdgeInsets.only(bottom: 9),
            decoration: const BoxDecoration(
                color: Colors.deepPurpleAccent,
                borderRadius: BorderRadius.all(Radius.circular(90))
            ),
            child: IconButton(
              color: Colors.white,
              onPressed: (){
                _controller.zoomOnCenter(false);
                setState(() {
                  MapLayer layer = MapLayer(
                      dataSource: polygons,
                      theme: MapRuleTheme(contourColor:Colors.black26, colorRules: [
                            (feature) {
                          int? value = feature.id - 1;
                          return value == selectedIndex ? Colors.deepPurpleAccent : null;
                        },
                      ])
                  );
                  _controller = VectorMapController(layers: [layer], delayToRefreshResolution: 0 ,minScale: scale-9);
                  scale = scale -9;
                });
              },
              icon: const Icon(Icons.remove_circle_outline,size: 37),
            ),
          ),
          Container(
            decoration: const BoxDecoration(
                color: Colors.deepPurpleAccent,
                borderRadius: BorderRadius.all(Radius.circular(90))
            ),
            child: IconButton(
              onPressed: (){
                _controller.zoomOnCenter(true);
                setState(() {
                  scale = _controller.scale;
                });
              },
              color: Colors.white,
              icon: const Icon(Icons.add_circle_outline,size: 37),
            ),
          ),
        ],
      ):Container(),
    );
  }
}

class Model {
  Model(this.name);
  String name;
}
